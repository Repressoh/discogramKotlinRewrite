# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CD with Maven (commit)

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    environment:
      name: CD
      url: github.com
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn compile

    - name: Package the JAR
      run: mvn package
      
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@d682d5d68a398c90e9b35f8c564cd8e1918d6a24
      continue-on-error: true
      with:
        token: ${{ secrets.GH_TOKEN }}
    
    - name: Rename the file
      run: mv /home/runner/work/discogramKotlinRewrite/discogramKotlinRewrite/target/discogramRewrite-1.0-SNAPSHOT.jar /home/runner/work/discogramKotlinRewrite/discogramKotlinRewrite/target/DiscogramRewrite.jar
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Prebuilt JAR
        path: /home/runner/work/discogramKotlinRewrite/discogramKotlinRewrite/target/DiscogramRewrite.jar
